!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?s(exports):"function"==typeof define&&define.amd?define(["exports"],s):s((t="undefined"!=typeof globalThis?globalThis:t||self).t={})}(this,(function(t){"use strict";class s{static i=Symbol();static o=Symbol();static h=Symbol()}class e{value;dependencies=new Set;static[s.i]=null;static[s.o]=null;constructor(t){this.value=t}call(...t){e[s.o]=e[s.i],e[s.i]=null;const i=this.value(...t);return e[s.i]=e[s.o],i}bind(...t){return e[s.o]=e[s.i],e[s.i]=this,this.value(...t),e[s.i]=e[s.o],this}add(t){return t.dependencies.add(this),this.dependencies.add(t),this}delete(t){return t.dependencies.delete(this),this.dependencies.delete(t)}clear(){for(const t of this.dependencies)t.dependencies.delete(this);this.dependencies.clear()}}t.u=e,t.p=class{value;dependencies=new Set;constructor(t){void 0!==t&&(this.value=t)}get(){const t=e[s.i];return t&&this.add(t),this.value}set(t){if(this.value!==t){this.value=t;for(const t of this.dependencies)t.call()}return this.value}compute(t){const s=t(this.value);return this.set(s)}add(t){return t.dependencies.add(this),this.dependencies.add(t),this}delete(t){return t.dependencies.delete(this),this.dependencies.delete(t)}clear(){for(const t of this.dependencies)t.dependencies.delete(this);this.dependencies.clear()}}}));
