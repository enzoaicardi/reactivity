var Reactivity=function(t){"use strict";class s{static t=Symbol();static i=Symbol();static h=Symbol();static o=Symbol();static l=Symbol()}class i{value;[s.t];[s.i];static[s.h]=null;static[s.o]=null;constructor(t){this.value=t,this[s.t]=new Set,this[s.i]=!1}add(t){this[s.t].add(t),t[s.t].add(this)}use(...t){i[s.o]=i[s.h],i[s.h]=this[s.i]?null:this,this[s.i]||(this[s.i]=!0);const e=this.value(...t);return i[s.h]=i[s.o],e}delete(t){this[s.t].delete(t),t[s.t].delete(this)}clear(){for(const t of this[s.t])t[s.t].delete(this);this[s.t].clear()}}return t.S=i,t.m=class{value;[s.t];constructor(t){void 0!==t&&(this.value=t),this[s.t]=new Set}add(t){this[s.t].add(t),t[s.t].add(this)}get(){const t=i[s.h];return t&&(this[s.t].add(t),t[s.t].add(this)),this.value}set(t){if(this.value!==t){this.value=t;for(const t of this[s.t])t.use()}return this.value}compute(t){const s=t(this.value);this.set(s)}delete(t){this[s.t].delete(t),t[s.t].delete(this)}clear(){for(const t of this[s.t])t[s.t].delete(this);this[s.t].clear()}},t}({});
