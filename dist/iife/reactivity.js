var Reactivity=function(t){"use strict";class s{static t=Symbol();static i=Symbol();static h=Symbol()}class i{value;dependencies=new Set;static[s.t]=null;static[s.i]=null;constructor(t){this.value=t}call(...t){i[s.i]=i[s.t],i[s.t]=null;const e=this.value(...t);return i[s.t]=i[s.i],e}bind(...t){return i[s.i]=i[s.t],i[s.t]=this,this.value(...t),i[s.t]=i[s.i],this}add(t){return t.dependencies.add(this),this.dependencies.add(t),this}delete(t){return t.dependencies.delete(this),this.dependencies.delete(t)}clear(){for(const t of this.dependencies)t.dependencies.delete(this);this.dependencies.clear()}}return t.l=i,t.u=class{value;dependencies=new Set;constructor(t){void 0!==t&&(this.value=t)}get(){const t=i[s.t];return t&&this.add(t),this.value}set(t){if(this.value!==t){this.value=t;for(const t of this.dependencies)t.call()}return this.value}compute(t){const s=t(this.value);return this.set(s)}add(t){return t.dependencies.add(this),this.dependencies.add(t),this}delete(t){return t.dependencies.delete(this),this.dependencies.delete(t)}clear(){for(const t of this.dependencies)t.dependencies.delete(this);this.dependencies.clear()}},t}({});
