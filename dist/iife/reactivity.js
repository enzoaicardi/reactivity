var Reactivity=function(t){"use strict";class s{value;t;i;static h=null;static u=null;static use=(t,...e)=>new s(t).use(...e);constructor(t){this.value=t,this.t=new Set,this.i=!1}add(t){this.t.add(t),t.t.add(this)}use(...t){s.u=s.h,s.h=this.i?null:this,this.i||(this.i=!0);const e=this.value(...t);return s.h=s.u,e}delete(t){if(t)this.t.delete(t),t.t.delete(this);else{for(const t of this.t)t.t.delete(this);this.t.clear()}}}class e{value;t;constructor(t){void 0!==t&&(this.value=t),this.t=new Set}get(){const t=s.h;return t&&(this.t.add(t),t.t.add(this)),this.value}set(t){if(this.value!==t){this.value=t;for(const t of this.t)t.use()}return this.value}delete(t){if(t)this.t.delete(t),t.t.delete(this);else{for(const t of this.t)t.t.delete(this);this.t.clear()}}}return t.o=class extends e{l;p;entry;constructor(t){super(),this.l=t,this.p=new s((()=>this.set(this.entry))),this.p.use()}set(t){return this.entry=t,t=this.l(t),super.set(t)}delete(t){delete this.entry,!t&&this.p&&(this.p.delete(),delete this.p),super.delete(t)}},t.v=s,t.S=e,t}({});
