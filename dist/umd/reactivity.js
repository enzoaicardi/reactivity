!function(t,s){"object"==typeof exports&&"undefined"!=typeof module?s(exports):"function"==typeof define&&define.amd?define(["exports"],s):s((t="undefined"!=typeof globalThis?globalThis:t||self).t={})}(this,(function(t){"use strict";class s{static i=Symbol();static o=Symbol();static h=Symbol();static l=Symbol();static u=Symbol()}class i{value;[s.i];[s.o];static[s.h]=null;static[s.l]=null;constructor(t){this.value=t,this[s.i]=new Set,this[s.o]=!1}add(t){this[s.i].add(t),t[s.i].add(this)}use(...t){i[s.l]=i[s.h],i[s.h]=this[s.o]?null:this,this[s.o]||(this[s.o]=!0);const e=this.value(...t);return i[s.h]=i[s.l],e}delete(t){this[s.i].delete(t),t[s.i].delete(this)}clear(){for(const t of this[s.i])t[s.i].delete(this);this[s.i].clear()}}t.m=i,t.S=class{value;[s.i];constructor(t){void 0!==t&&(this.value=t),this[s.i]=new Set}add(t){this[s.i].add(t),t[s.i].add(this)}get(){const t=i[s.h];return t&&(this[s.i].add(t),t[s.i].add(this)),this.value}set(t){if(this.value!==t){this.value=t;for(const t of this[s.i])t.use()}return this.value}compute(t){const s=t(this.value);this.set(s)}delete(t){this[s.i].delete(t),t[s.i].delete(this)}clear(){for(const t of this[s.i])t[s.i].delete(this);this[s.i].clear()}}}));
